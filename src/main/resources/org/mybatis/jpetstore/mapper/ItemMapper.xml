<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2010-2022 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          https://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.mybatis.jpetstore.mapper.ItemMapper">

  <cache />

  <select id="getItemListByProduct" resultType="Item">
    SELECT
      I.ITEMID,
      I.PRODUCTID,
      LISTPRICE,
      UNITCOST,
      SUPPLIER AS supplierId,
      I.PRODUCTID AS "product.productId",
      NAME AS "product.name",
      DESCN AS "product.description",
      CATEGORY AS "product.categoryId",
      STATUS,
      ATTR1 AS attribute1,
      ATTR2 AS attribute2,
      ATTR3 AS attribute3,
      ATTR4 AS attribute4,
      ATTR5 AS attribute5,
      IV.qty AS quantity,
      P.category AS categoryId
    FROM ITEM I, PRODUCT P, INVENTORY IV
    WHERE P.PRODUCTID = I.PRODUCTID
      AND I.STATUS = 'P'
      AND I.PRODUCTID = #{itemId}
      AND I.itemid = IV.itemid
  </select>

  <select id="getItem" resultType="Item">
    select
      I.ITEMID,
      LISTPRICE,
      UNITCOST,
      SUPPLIER AS supplierId,
      I.PRODUCTID AS "product.productId",
      NAME AS "product.name",
      DESCN AS "product.description",
      CATEGORY AS "product.categoryId",
      STATUS,
      ATTR1 AS attribute1,
      ATTR2 AS attribute2,
      ATTR3 AS attribute3,
      ATTR4 AS attribute4,
      ATTR5 AS attribute5,
      QTY AS quantity
    from ITEM I, INVENTORY V, PRODUCT P
    where P.PRODUCTID = I.PRODUCTID
      and I.ITEMID = V.ITEMID
      and I.STATUS = 'P'
      and I.ITEMID = #{value}
  </select>

  <select id="getInventoryQuantity" resultType="int">
    SELECT QTY AS value
    FROM INVENTORY
    WHERE ITEMID = #{itemId}
  </select>

  <update id="updateInventoryQuantity">
    UPDATE INVENTORY SET
      QTY = QTY - #{increment}
    WHERE ITEMID = #{itemId}
  </update>

  <update id="deleteItemByAdmin">
    UPDATE ITEM, INVENTORY
    SET ITEM.STATUS   = 'N',
        INVENTORY.qty = 0
    WHERE ITEM.ITEMID = #{itemid}
      AND INVENTORY.itemid = #{itemid}
  </update>

  <insert id="insertItemByAdmin" parameterType="Item">
    INSERT INTO ITEM(ITEMID, PRODUCTID, LISTPRICE, SUPPLIER, STATUS, ATTR1) values (#{itemId}, #{productId}, #{listPrice}, 1, 'P', #{attribute1});
  </insert>
  
  <insert id="insertInventoryByAdmin" parameterType="Item">
    INSERT INTO INVENTORY(ITEMID, QTY) VALUES (#{itemId}, #{quantity});
  </insert>

  <update id="updateItemByAdmin" parameterType="Item">
    update ITEM SET attr1 = #{attribute1}, listprice=#{listPrice} where itemid=#{itemId};
  </update>

  <update id="updateInventoryByAdmin" parameterType="Item">
    update INVENTORY SET qty = #{quantity} where itemid=#{itemId};
  </update>

  <select id="getAnimalInfo" resultType="AnimalInfo">
    select AIL.columname, AIV.value
    from ANIMALINFOCOLUMN AIC
           INNER JOIN ANIMALINFOCOLUMNLIST AIL on AIC.columnid = AIL.columnid
           INNER JOIN ANIMALINFOVALUE AIV on AIC.animalinfovalueId = AIV.animalinfovalueId
    where AIC.catid = #{categoryId} and AIC.productid = #{productId} and AIC.status=true;
  </select>

  <update id="updateAnimalInfoValueByAdmin" parameterType="AnimalInfo">
    update ANIMALINFOVALUE AIV set AIV.value = #{value} where AIV.animalinfovalueId = #{animalinfovalueId};
  </update>

  <select id="getAnimalInfoValueId" resultType="int">
    select AIC.animalinfovalueId from ANIMALINFOCOLUMN AIC
                                        INNER JOIN ANIMALINFOCOLUMNLIST AIL on AIC.columnid = AIL.columnid
                                        INNER JOIN ANIMALINFOVALUE AIV on AIC.animalinfovalueId = AIV.animalinfovalueId
    where AIC.catid = #{categoryId} and AIC.productid = #{productId} and AIL.columname = #{columname};
  </select>

  <insert id="insertAnimalInfoColumnByAdmin" parameterType="AnimalInfo">
    insert into ANIMALINFOCOLUMNLIST(columname) value (#{columname}) on duplicate key update columname = #{columname};
  </insert>

  <select id="getColumnIdByAdmin" resultType="int">
    select columnid from ANIMALINFOCOLUMNLIST where columname = #{columname};
  </select>

  <insert id="insertAnimalInfoByAdmin" parameterType="AnimalInfo">
    insert into ANIMALINFOCOLUMN (columnid, animalinfovalueId, catid, productid)
    values (#{columnId}, 81, #{categoryId}, #{productId});
  </insert>

  <select id="isColumnIdExist" resultType="boolean">
    select exists(select columname from ANIMALINFOCOLUMNLIST where columname = #{columname});
  </select>

  <select id="getLastAccessColumnId" resultType="int">
    SELECT last_insert_id();
  </select>

  <select id="getAnimalInfoColumnId" resultType="int">
    select columnid from ANIMALINFOCOLUMNLIST where columname = #{columname};
  </select>

  <update id="deleteAnimalInfoByAdmin" parameterType="AnimalInfo">
    update ANIMALINFOCOLUMN SET status = false where catid = #{categoryId} and columnid = #{columnId};
  </update>
</mapper>
